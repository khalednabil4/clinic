# Generated by Django 3.2.18 on 2024-12-01 17:23

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.user')),
                ('name', models.CharField(blank=True, default='User', max_length=100)),
                ('profile_img', models.ImageField(default='/Admins/doctor.jpg', upload_to='Admins')),
                ('bio', models.CharField(blank=True, default='User Here', max_length=100)),
                ('SpecialInformation', models.TextField(blank=True, null=True)),
                ('GraduationFrom', models.CharField(max_length=100)),
                ('GraduationDate', models.DateField(max_length=100)),
                ('IsDoctor', models.BooleanField(default=0)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Clinic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('bio', models.TextField()),
                ('code', models.CharField(max_length=50)),
                ('IsAvailable', models.BooleanField(default=1)),
                ('AvaiableTimeFrom', models.DateField(blank=True, null=True)),
                ('AvaiableTimeTo', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Days',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('MONDAY', 'Monday'), ('TUESDAY', 'Tuesday'), ('WEDNESDAY', 'Wednesday'), ('THURSDAY', 'Thursday'), ('FRIDAY', 'Friday'), ('SATURDAY', 'Saturday'), ('SUNDAY', 'Sunday')], max_length=20)),
                ('date', models.DateField()),
                ('Admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='DaysOpen', to='DataBase.administrator')),
            ],
        ),
        migrations.CreateModel(
            name='Doctoravailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DateFrom', models.TimeField()),
                ('DateTo', models.TimeField()),
                ('Status', models.BooleanField(default=0)),
                ('DayOpen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Schedule', to='DataBase.days')),
                ('Doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admin', to='DataBase.administrator')),
            ],
        ),
        migrations.CreateModel(
            name='DoctorSpecialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('Code', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='HomeVisit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=255)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('SitePrice', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('bio', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('StartDate', models.DateField()),
                ('EndDate', models.DateField(blank=True, null=True)),
                ('attributes', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='PackageService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('special_price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='PackageType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=50)),
                ('urgency_level', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='patient',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.user')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('profile_img', models.ImageField(blank=True, default='/patient/account.png', null=True, upload_to='patient')),
                ('birth_date', models.DateField(null=True)),
                ('Organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Clinic', to='DataBase.organization')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exclusivity', models.BooleanField(default=0)),
                ('onSite', models.BooleanField(default=0)),
                ('ReservationNumber', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ResponseTime', models.DateTimeField(blank=True, null=True)),
                ('Status', models.CharField(choices=[('SCHEDULED', 'Scheduled'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('FOLLOWUP', 'Follow-up')], max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('PaymentType', models.CharField(choices=[('CASH', 'Cash'), ('CREDIT_CARD', 'Credit Card'), ('BANK_TRANSFER', 'Bank Transfer')], default='CASH', max_length=20)),
                ('TotalAmount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('AmountPaid', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('HomeVist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reservations', to='DataBase.homevisit')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('Price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('NextTime', models.DateField()),
                ('Immediately', models.BooleanField()),
                ('clinic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='DataBase.clinic')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Service', to='DataBase.administrator')),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('IsCome', models.BooleanField(default=1)),
                ('AttendanceTime', models.TimeField()),
                ('TimeStart', models.TimeField()),
                ('TimeLeave', models.TimeField()),
                ('LeaveTime', models.TimeField()),
                ('Doctoravailability', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Schedule', to='DataBase.doctoravailability')),
                ('clinic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Schedule', to='DataBase.clinic')),
            ],
        ),
        migrations.CreateModel(
            name='ReservationHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_type', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('Details', models.TextField(blank=True, null=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='DataBase.reservationhistory')),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='DataBase.reservation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='reservation',
            name='Schedule',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Reservation', to='DataBase.schedule'),
        ),
        migrations.AddField(
            model_name='reservation',
            name='packageservice',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reservations', to='DataBase.packageservice'),
        ),
        migrations.AddField(
            model_name='reservation',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='DataBase.reservation'),
        ),
        migrations.AddField(
            model_name='reservation',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='DataBase.patient'),
        ),
        migrations.AddField(
            model_name='reservation',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='DataBase.service'),
        ),
        migrations.CreateModel(
            name='PatientHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DateTO', models.DateField()),
                ('DateFrom', models.DateField()),
                ('Doctor', models.CharField(blank=True, max_length=50, null=True)),
                ('Doc', models.ImageField(blank=True, null=True, upload_to='PatientDoc')),
                ('PatientVitals', models.JSONField(blank=True, null=True)),
                ('Note', models.TextField()),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PatientHistory', to='DataBase.patient')),
            ],
        ),
        migrations.CreateModel(
            name='PatientCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PatientCase', models.TextField()),
                ('DoctorRequirements', models.TextField()),
                ('PatientVitals', models.JSONField(blank=True, null=True)),
                ('Doc', models.ImageField(blank=True, null=True, upload_to='PatientDoc')),
                ('Service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PatientCondition', to='DataBase.service')),
            ],
        ),
        migrations.AddField(
            model_name='packageservice',
            name='Reservation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PackageService', to='DataBase.reservation'),
        ),
        migrations.AddField(
            model_name='packageservice',
            name='package',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PackageService', to='DataBase.package'),
        ),
        migrations.AddField(
            model_name='package',
            name='PackageType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Package', to='DataBase.packagetype'),
        ),
        migrations.AddField(
            model_name='package',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Package', to='DataBase.patient'),
        ),
        migrations.AddField(
            model_name='homevisit',
            name='reservation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='HomeVisit', to='DataBase.reservation'),
        ),
        migrations.CreateModel(
            name='GroupPermission',
            fields=[
                ('group_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.group')),
                ('group_name', models.CharField(max_length=100)),
                ('Clinic', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='DataBase.organization')),
            ],
            bases=('auth.group',),
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.AddField(
            model_name='clinic',
            name='DoctorSpecialization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Clinic', to='DataBase.doctorspecialization'),
        ),
        migrations.AddField(
            model_name='administrator',
            name='Clinic',
            field=models.ManyToManyField(blank=True, null=True, related_name='administrators', to='DataBase.Clinic'),
        ),
        migrations.AddField(
            model_name='administrator',
            name='DoctorSpecializations',
            field=models.ManyToManyField(blank=True, null=True, related_name='administrators', to='DataBase.DoctorSpecialization'),
        ),
        migrations.AddField(
            model_name='administrator',
            name='Organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='admin', to='DataBase.organization'),
        ),
        migrations.AddField(
            model_name='administrator',
            name='group_in',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='admin', to='DataBase.grouppermission'),
        ),
        migrations.AlterUniqueTogether(
            name='packageservice',
            unique_together={('package', 'Reservation')},
        ),
    ]
